"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[8749],{1895:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"generics","metadata":{"permalink":"/blog/generics","editUrl":"https://github.com/acornprover/acornprover.org/edit/master/blog/2025-02-26-generics.md","source":"@site/blog/2025-02-26-generics.md","title":"Generics","description":"We\'ve deployed a new version of the Acorn Prover, 0.0.5, with support for a commonly requested feature","date":"2025-02-26T00:00:00.000Z","tags":[{"inline":true,"label":"language","permalink":"/blog/tags/language"}],"hasTruncateMarker":true,"authors":[{"name":"Kevin Lacker","title":"Generalist","url":"https://lacker.io","page":{"permalink":"/blog/authors/lacker"},"socials":{"x":"https://x.com/lacker","github":"https://github.com/lacker"},"imageURL":"https://github.com/lacker.png","key":"lacker"}],"frontMatter":{"slug":"generics","title":"Generics","authors":["lacker"],"tags":["language"]},"unlisted":false,"nextItem":{"title":"Hello World","permalink":"/blog/hello-world"}},"content":"We\'ve deployed a new version of the Acorn Prover, 0.0.5, with support for a commonly requested feature: generic types. For example, the standard library now has a `Pair` structure:\\n\\n```acorn\\nstructure Pair<T, U> {\\n    first: T\\n    second: U\\n}\\n```\\n\\n\x3c!-- truncate --\x3e\\n\\nGenerics allow defining functions, structures, or theorems with placeholders for types, so that proofs\\ncan be reused while maintaining type safety. Instead of specifying a concrete type, generics use type parameters that can be substituted with actual types when used.\\n\\nStructures, function definitions, and theorems can all be expressed generically:\\n\\n```acorn\\nstructure LatticePoint<T> {\\n    x: T\\n    y: T\\n}\\n\\nclass LatticePoint<T> {\\n    define swap(self) -> LatticePoint<T> {\\n        LatticePoint.new(self.y, self.x)\\n    }\\n\\n    define on_main_diagonal(self) -> Bool {\\n        self.x = self.y\\n    }\\n}\\n\\ntheorem swap_is_involutive<T>(p: LatticePoint<T>) {\\n    p.swap.swap = p\\n} by {\\n    p.swap.x = p.y\\n    p.swap.y = p.x\\n}\\n\\ndefine colinear<T>(a: LatticePoint<T>,\\n                   b: LatticePoint<T>) -> Bool {\\n    a.x = b.x or a.y = b.y\\n}\\n\\ntheorem swap_colinear_imp_main<T>(a: LatticePoint<T>) {\\n    colinear(a, a.swap) implies a.on_main_diagonal\\n} by {\\n    if a.x = a.swap.x {\\n        a.on_main_diagonal\\n    } else {\\n        a.y = a.swap.y\\n        a.on_main_diagonal\\n    }\\n}\\n```\\n\\nWe\'ve updated the standard library to use generics where appropriate. If you have the Acorn Prover VS Code extension installed, updating your extension will automatically get you support for generics. Give it a try and let us know in [Discord](https://discord.gg/RqXxaye4MC) if you have any questions!"},{"id":"hello-world","metadata":{"permalink":"/blog/hello-world","editUrl":"https://github.com/acornprover/acornprover.org/edit/master/blog/2024-12-09-hello-world.md","source":"@site/blog/2024-12-09-hello-world.md","title":"Hello World","description":"Good news, everybody!","date":"2024-12-09T00:00:00.000Z","tags":[{"inline":false,"label":"meta","permalink":"/blog/tags/meta","description":"Meta-posts, that are not so much about something, but rather about something that\'s about something."}],"hasTruncateMarker":true,"authors":[{"name":"Kevin Lacker","title":"Generalist","url":"https://lacker.io","page":{"permalink":"/blog/authors/lacker"},"socials":{"x":"https://x.com/lacker","github":"https://github.com/lacker"},"imageURL":"https://github.com/lacker.png","key":"lacker"}],"frontMatter":{"slug":"hello-world","title":"Hello World","authors":["lacker"],"tags":["meta"]},"unlisted":false,"prevItem":{"title":"Generics","permalink":"/blog/generics"}},"content":"Good news, everybody!\\n\\nWith this blog post, I hereby demonstrate that the Acorn blog is now capable of handling posts.\\n\\n\x3c!-- truncate --\x3e\\n\\nTo give a brief overview, the current state of Acorn is \\"not yet ready for public consumption\\". You can [get the Acorn code from GitHub](https://github.com/acornprover/acorn) to build it yourself, or you can [browse the Acorn standard library](https://github.com/acornprover/acornlib) to get a sense of the language, but the sane distribution channels aren\'t entirely hooked up yet.\\n\\nWe\'ll be ready for private beta real soon now. Just a few more little details to touch up. Stay tuned!"}]}}')}}]);