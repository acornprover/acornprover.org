"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[6536],{9445:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"language/structure-types","title":"Structure Types","description":"Structure types group together objects of other types. They are defined with the structure keyword. For example, we can make a type out of two integer fields:","source":"@site/docs/language/structure-types.md","sourceDirName":"language","slug":"/language/structure-types","permalink":"/docs/language/structure-types","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/language/structure-types.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"sidebar","previous":{"title":"Imports","permalink":"/docs/language/imports"},"next":{"title":"Inductive Types","permalink":"/docs/language/inductive-types"}}');var s=n(4848),i=n(8453);const o={sidebar_position:7},c="Structure Types",a={},u=[{value:"Structure Methods",id:"structure-methods",level:2},{value:"Implicit Meaning",id:"implicit-meaning",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"structure-types",children:"Structure Types"})}),"\n",(0,s.jsxs)(t.p,{children:["Structure types group together objects of other types. They are defined with the ",(0,s.jsx)(t.code,{children:"structure"})," keyword. For example, we can make a type out of two integer fields:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-acorn",children:"from int import Int\nnumerals Int\n\nstructure LatticePoint {\n    x: Int\n    y: Int\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"Field names must be lowercase. Structure types can't refer to themselves in their definition."}),"\n",(0,s.jsx)(t.h2,{id:"structure-methods",children:"Structure Methods"}),"\n",(0,s.jsxs)(t.p,{children:["When we define a structure type, it comes with a ",(0,s.jsx)(t.code,{children:"new"})," method to create objects of this type. Methods are functions that are affiliated with a particular type. They can be used with a dot syntax, ",(0,s.jsx)(t.code,{children:"TypeName.method_name"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-acorn",children:"let origin: LatticePoint = LatticePoint.new(0, 0)\n"})}),"\n",(0,s.jsx)(t.p,{children:'Each field also comes with a "projection" method, to get that field\'s value out of the structure.'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-acorn",children:"theorem origin_x_is_zero {\n    LatticePoint.x(origin) = 0\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["For methods where the first argument is the type itself, you can use the dot syntax with the object itself. So ",(0,s.jsx)(t.code,{children:"LatticePoint.x(point)"})," and ",(0,s.jsx)(t.code,{children:"point.x"})," are equivalent."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-acorn",children:"theorem origin_y_is_zero {\n    origin.y = 0\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"implicit-meaning",children:"Implicit Meaning"}),"\n",(0,s.jsxs)(t.p,{children:["Structure types have two implicit theorems. One is that the ",(0,s.jsx)(t.code,{children:"new"})," constructor can make every object of that type."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-acorn",children:"theorem new_is_surjective(p: LatticePoint) {\n    exists(x: Int, y: Int) {\n        p = LatticePoint.new(x, y)\n    }\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"The other implicit theorem is that the projection methods retrieve the arguments used to construct the structure."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-acorn",children:"theorem projection(x: Int, y: Int) {\n    LatticePoint.new(x, y).x = x and LatticePoint.new(x, y).y = y\n}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(6540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);