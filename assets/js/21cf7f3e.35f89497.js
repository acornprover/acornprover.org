"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[6344],{6053:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"library/AddMonoid","title":"AddMonoid","description":"An additive monoid is an additive semigroup with an identity element.","source":"@site/docs/library/AddMonoid.md","sourceDirName":"library","slug":"/library/AddMonoid","permalink":"/docs/library/AddMonoid","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/library/AddMonoid.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AddGroup","permalink":"/docs/library/AddGroup"},"next":{"title":"AddSemigroup","permalink":"/docs/library/AddSemigroup"}}');var t=n(4848),r=n(8453);const a={},o="AddMonoid",s={},c=[{value:"add",id:"add",level:2},{value:"add_associative",id:"add_associative",level:2},{value:"add_identity_left",id:"add_identity_left",level:2},{value:"add_identity_right",id:"add_identity_right",level:2}];function l(e){const d={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(d.header,{children:(0,t.jsx)(d.h1,{id:"addmonoid",children:"AddMonoid"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-acorn",children:"typeclass A: AddMonoid extends AddSemigroup {\n    0: A\n    add_identity_right(a: A) {\n        a + A.0 = a\n    }\n    add_identity_left(a: A) {\n        A.0 + a = a\n    }\n}\n"})}),"\n",(0,t.jsx)(d.p,{children:"An additive monoid is an additive semigroup with an identity element."}),"\n",(0,t.jsx)(d.p,{children:(0,t.jsx)(d.a,{href:"https://github.com/acornprover/acornlib/blob/master/src/add_monoid.ac",children:"GitHub"})}),"\n",(0,t.jsx)(d.hr,{}),"\n",(0,t.jsx)(d.h2,{id:"add",children:"add"}),"\n",(0,t.jsxs)(d.p,{children:["Inherited from ",(0,t.jsx)(d.a,{href:"../AddSemigroup/#add",children:"AddSemigroup"}),"."]}),"\n",(0,t.jsx)(d.h2,{id:"add_associative",children:"add_associative"}),"\n",(0,t.jsxs)(d.p,{children:["Inherited from ",(0,t.jsx)(d.a,{href:"../AddSemigroup/#add_associative",children:"AddSemigroup"}),"."]}),"\n",(0,t.jsx)(d.h2,{id:"add_identity_left",children:"add_identity_left"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-acorn",children:"add_identity_left(a: A) {\n    A.0 + a = a\n}\n"})}),"\n",(0,t.jsx)(d.p,{children:"The identity element must satisfy the identity property on the left."}),"\n",(0,t.jsx)(d.h2,{id:"add_identity_right",children:"add_identity_right"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-acorn",children:"add_identity_right(a: A) {\n    a + A.0 = a\n}\n"})}),"\n",(0,t.jsx)(d.p,{children:"The identity element must satisfy the identity property on the right."})]})}function h(e={}){const{wrapper:d}={...(0,r.R)(),...e.components};return d?(0,t.jsx)(d,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,d,n)=>{n.d(d,{R:()=>a,x:()=>o});var i=n(6540);const t={},r=i.createContext(t);function a(e){const d=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function o(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:d},e.children)}}}]);