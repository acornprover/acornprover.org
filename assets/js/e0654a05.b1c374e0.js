"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[3807],{3961:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"library/AddGroup","title":"AddGroup","description":"An additive group is an additive monoid that also has inverses.","source":"@site/docs/library/AddGroup.md","sourceDirName":"library","slug":"/library/AddGroup","permalink":"/docs/library/AddGroup","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/library/AddGroup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AddCommSemigroup","permalink":"/docs/library/AddCommSemigroup"},"next":{"title":"AddMonoid","permalink":"/docs/library/AddMonoid"}}');var i=n(4848),t=n(8453);const a={},s="AddGroup",o={},l=[{value:"add",id:"add",level:2},{value:"add_associative",id:"add_associative",level:2},{value:"add_identity_left",id:"add_identity_left",level:2},{value:"add_identity_right",id:"add_identity_right",level:2},{value:"inverse_right",id:"inverse_right",level:2},{value:"neg",id:"neg",level:2},{value:"sub",id:"sub",level:2}];function c(e){const d={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(d.header,{children:(0,i.jsx)(d.h1,{id:"addgroup",children:"AddGroup"})}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-acorn",children:"typeclass A: AddGroup extends AddMonoid {\n    neg: A -> A\n    inverse_right(a: A) {\n        a + -a = A.0\n    }\n}\n"})}),"\n",(0,i.jsx)(d.p,{children:"An additive group is an additive monoid that also has inverses."}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.a,{href:"https://github.com/acornprover/acornlib/blob/master/src/add_group.ac",children:"GitHub"})}),"\n",(0,i.jsx)(d.hr,{}),"\n",(0,i.jsx)(d.h2,{id:"add",children:"add"}),"\n",(0,i.jsxs)(d.p,{children:["Inherited from ",(0,i.jsx)(d.a,{href:"../AddSemigroup/#add",children:"AddSemigroup"}),"."]}),"\n",(0,i.jsx)(d.h2,{id:"add_associative",children:"add_associative"}),"\n",(0,i.jsxs)(d.p,{children:["Inherited from ",(0,i.jsx)(d.a,{href:"../AddSemigroup/#add_associative",children:"AddSemigroup"}),"."]}),"\n",(0,i.jsx)(d.h2,{id:"add_identity_left",children:"add_identity_left"}),"\n",(0,i.jsxs)(d.p,{children:["Inherited from ",(0,i.jsx)(d.a,{href:"../AddMonoid/#add_identity_left",children:"AddMonoid"}),"."]}),"\n",(0,i.jsx)(d.h2,{id:"add_identity_right",children:"add_identity_right"}),"\n",(0,i.jsxs)(d.p,{children:["Inherited from ",(0,i.jsx)(d.a,{href:"../AddMonoid/#add_identity_right",children:"AddMonoid"}),"."]}),"\n",(0,i.jsx)(d.h2,{id:"inverse_right",children:"inverse_right"}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-acorn",children:"inverse_right(a: A) {\n    a + -a = A.0\n}\n"})}),"\n",(0,i.jsx)(d.p,{children:'This is what "additive inverse" means.'}),"\n",(0,i.jsx)(d.h2,{id:"neg",children:"neg"}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-acorn",children:"neg: A -> A\n"})}),"\n",(0,i.jsx)(d.p,{children:"The additive inverse of an element."}),"\n",(0,i.jsx)(d.h2,{id:"sub",children:"sub"}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-acorn",children:"define sub(self, other: A) -> A {\n    self + -other\n}\n"})}),"\n",(0,i.jsx)(d.p,{children:"Subtracts one element from another using additive inverse."})]})}function h(e={}){const{wrapper:d}={...(0,t.R)(),...e.components};return d?(0,i.jsx)(d,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,d,n)=>{n.d(d,{R:()=>a,x:()=>s});var r=n(6540);const i={},t=r.createContext(i);function a(e){const d=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function s(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:d},e.children)}}}]);