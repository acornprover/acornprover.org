"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[6168],{4439:(d,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>t,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"library/AddCommMonoid","title":"AddCommMonoid","description":"AddCommMonoid represents a commutative, additive monoid.","source":"@site/docs/library/AddCommMonoid.md","sourceDirName":"library","slug":"/library/AddCommMonoid","permalink":"/docs/library/AddCommMonoid","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/library/AddCommMonoid.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AddCommGroup","permalink":"/docs/library/AddCommGroup"},"next":{"title":"AddCommSemigroup","permalink":"/docs/library/AddCommSemigroup"}}');var r=i(4848),n=i(8453);const t={},a="AddCommMonoid",s={},m=[{value:"add",id:"add",level:2},{value:"add_associative",id:"add_associative",level:2},{value:"add_identity_left",id:"add_identity_left",level:2},{value:"add_identity_right",id:"add_identity_right",level:2},{value:"commutative",id:"commutative",level:2}];function c(d){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,n.R)(),...d.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"addcommmonoid",children:"AddCommMonoid"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-acorn",children:"typeclass M: AddCommMonoid extends AddCommSemigroup, AddMonoid\n"})}),"\n",(0,r.jsx)(e.p,{children:"AddCommMonoid represents a commutative, additive monoid."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://github.com/acornprover/acornlib/blob/master/src/add_comm_monoid.ac",children:"GitHub"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"add",children:"add"}),"\n",(0,r.jsxs)(e.p,{children:["Inherited from ",(0,r.jsx)(e.a,{href:"../AddSemigroup/#add",children:"AddSemigroup"}),"."]}),"\n",(0,r.jsx)(e.h2,{id:"add_associative",children:"add_associative"}),"\n",(0,r.jsxs)(e.p,{children:["Inherited from ",(0,r.jsx)(e.a,{href:"../AddSemigroup/#add_associative",children:"AddSemigroup"}),"."]}),"\n",(0,r.jsx)(e.h2,{id:"add_identity_left",children:"add_identity_left"}),"\n",(0,r.jsxs)(e.p,{children:["Inherited from ",(0,r.jsx)(e.a,{href:"../AddMonoid/#add_identity_left",children:"AddMonoid"}),"."]}),"\n",(0,r.jsx)(e.h2,{id:"add_identity_right",children:"add_identity_right"}),"\n",(0,r.jsxs)(e.p,{children:["Inherited from ",(0,r.jsx)(e.a,{href:"../AddMonoid/#add_identity_right",children:"AddMonoid"}),"."]}),"\n",(0,r.jsx)(e.h2,{id:"commutative",children:"commutative"}),"\n",(0,r.jsxs)(e.p,{children:["Inherited from ",(0,r.jsx)(e.a,{href:"../AddCommSemigroup/#commutative",children:"AddCommSemigroup"}),"."]})]})}function l(d={}){const{wrapper:e}={...(0,n.R)(),...d.components};return e?(0,r.jsx)(e,{...d,children:(0,r.jsx)(c,{...d})}):c(d)}},8453:(d,e,i)=>{i.d(e,{R:()=>t,x:()=>a});var o=i(6540);const r={},n=o.createContext(r);function t(d){const e=o.useContext(n);return o.useMemo((function(){return"function"==typeof d?d(e):{...e,...d}}),[e,d])}function a(d){let e;return e=d.disableParentContext?"function"==typeof d.components?d.components(r):d.components||r:t(d.components),o.createElement(n.Provider,{value:e},d.children)}}}]);