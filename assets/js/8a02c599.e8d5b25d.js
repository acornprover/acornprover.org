"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[6810],{7872:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"library/PartialOrder","title":"PartialOrder","description":"A partial order is a relation that is reflexive, transitive, and antisymmetric.","source":"@site/docs/library/PartialOrder.md","sourceDirName":"library","slug":"/library/PartialOrder","permalink":"/docs/library/PartialOrder","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/library/PartialOrder.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Pair","permalink":"/docs/library/Pair"},"next":{"title":"Rat","permalink":"/docs/library/Rat"}}');var i=n(4848),a=n(8453);const l={},s="PartialOrder",c={},o=[{value:"antisymmetric",id:"antisymmetric",level:2},{value:"gt",id:"gt",level:2},{value:"gte",id:"gte",level:2},{value:"lt",id:"lt",level:2},{value:"lte",id:"lte",level:2},{value:"reflexive",id:"reflexive",level:2},{value:"transitive",id:"transitive",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"partialorder",children:"PartialOrder"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-acorn",children:"typeclass P: PartialOrder {\n    lte: (P, P) -> Bool\n    reflexive {\n        is_reflexive(P.lte)\n    }\n    transitive {\n        is_transitive(P.lte)\n    }\n    antisymmetric {\n        is_antisymmetric(P.lte)\n    }\n}\n"})}),"\n",(0,i.jsx)(r.p,{children:"A partial order is a relation that is reflexive, transitive, and antisymmetric.\nNot all elements need to be comparable."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/acornprover/acornlib/blob/master/src/order.ac",children:"GitHub"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"antisymmetric",children:"antisymmetric"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-acorn",children:"antisymmetric {\n    is_antisymmetric(P.lte)\n}\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The order relation must be antisymmetric: if ",(0,i.jsx)(r.code,{children:"a \u2264 b"})," and ",(0,i.jsx)(r.code,{children:"b \u2264 a"}),", then ",(0,i.jsx)(r.code,{children:"a = b"}),"."]}),"\n",(0,i.jsx)(r.h2,{id:"gt",children:"gt"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-acorn",children:"define gt(self, other: P) -> Bool {\n    other < self\n}\n"})}),"\n",(0,i.jsx)(r.p,{children:"Strict greater-than comparison."}),"\n",(0,i.jsx)(r.h2,{id:"gte",children:"gte"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-acorn",children:"define gte(self, other: P) -> Bool {\n    other <= self\n}\n"})}),"\n",(0,i.jsx)(r.p,{children:"Greater-than-or-equal-to comparison."}),"\n",(0,i.jsx)(r.h2,{id:"lt",children:"lt"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-acorn",children:"define lt(self, other: P) -> Bool {\n    self <= other and self != other\n}\n"})}),"\n",(0,i.jsx)(r.p,{children:"Strict less-than comparison."}),"\n",(0,i.jsx)(r.h2,{id:"lte",children:"lte"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-acorn",children:"lte: (P, P) -> Bool\n"})}),"\n",(0,i.jsx)(r.p,{children:"The less-than-or-equal-to relation defining the partial order."}),"\n",(0,i.jsx)(r.h2,{id:"reflexive",children:"reflexive"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-acorn",children:"reflexive {\n    is_reflexive(P.lte)\n}\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The order relation must be reflexive: every element is ",(0,i.jsx)(r.code,{children:"\u2264"})," itself."]}),"\n",(0,i.jsx)(r.h2,{id:"transitive",children:"transitive"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-acorn",children:"transitive {\n    is_transitive(P.lte)\n}\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The order relation must be transitive: if ",(0,i.jsx)(r.code,{children:"a \u2264 b"})," and ",(0,i.jsx)(r.code,{children:"b \u2264 c"}),", then ",(0,i.jsx)(r.code,{children:"a \u2264 c"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>s});var t=n(6540);const i={},a=t.createContext(i);function l(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);