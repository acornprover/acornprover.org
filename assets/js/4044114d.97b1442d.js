"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[3089],{550:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"library/Color","title":"Color","description":"A simple enumeration type used as an example of a metric space with the discrete metric.","source":"@site/docs/library/Color.md","sourceDirName":"library","slug":"/library/Color","permalink":"/docs/library/Color","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/library/Color.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"AddSemigroup","permalink":"/docs/library/AddSemigroup"},"next":{"title":"CommGroup","permalink":"/docs/library/CommGroup"}}');var t=n(4848),l=n(8453);const s={},c="Color",i={},a=[{value:"blue",id:"blue",level:2},{value:"green",id:"green",level:2},{value:"red",id:"red",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"color",children:"Color"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-acorn",children:"inductive Color {\n    red\n    green\n    blue\n}\n"})}),"\n",(0,t.jsx)(r.p,{children:"A simple enumeration type used as an example of a metric space with the discrete metric."}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://github.com/acornprover/acornlib/blob/master/src/metric_space.ac",children:"GitHub"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"blue",children:"blue"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-acorn",children:"Color.blue: Color\n"})}),"\n",(0,t.jsx)(r.p,{children:"Blue is not red or green."}),"\n",(0,t.jsx)(r.h2,{id:"green",children:"green"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-acorn",children:"Color.green: Color\n"})}),"\n",(0,t.jsx)(r.p,{children:"Green is not red or blue."}),"\n",(0,t.jsx)(r.h2,{id:"red",children:"red"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-acorn",children:"Color.red: Color\n"})}),"\n",(0,t.jsx)(r.p,{children:"Red means nothing. It's just different from green and blue."})]})}function u(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var o=n(6540);const t={},l=o.createContext(t);function s(e){const r=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(l.Provider,{value:r},e.children)}}}]);