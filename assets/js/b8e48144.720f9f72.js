"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[6467],{3535:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"library/Group","title":"Group","description":"A group is a monoid that also has inverses.","source":"@site/docs/library/Group.md","sourceDirName":"library","slug":"/library/Group","permalink":"/docs/library/Group","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/library/Group.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"FiniteSet","permalink":"/docs/library/FiniteSet"},"next":{"title":"GroupHom","permalink":"/docs/library/GroupHom"}}');var t=n(4848),s=n(8453);const o={},l="Group",a={},d=[{value:"inverse",id:"inverse",level:2},{value:"inverse_right",id:"inverse_right",level:2},{value:"mul",id:"mul",level:2},{value:"mul_associative",id:"mul_associative",level:2},{value:"mul_identity_left",id:"mul_identity_left",level:2},{value:"mul_identity_right",id:"mul_identity_right",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"group",children:"Group"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-acorn",children:"typeclass G: Group extends Monoid {\n    inverse: G -> G\n    inverse_right(a: G) {\n        a * a.inverse = G.1\n    }\n}\n"})}),"\n",(0,t.jsx)(r.p,{children:"A group is a monoid that also has inverses."}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://github.com/acornprover/acornlib/blob/master/src/group.ac",children:"GitHub"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"inverse",children:"inverse"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-acorn",children:"inverse: G -> G\n"})}),"\n",(0,t.jsx)(r.p,{children:"The inverse operation"}),"\n",(0,t.jsx)(r.h2,{id:"inverse_right",children:"inverse_right"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-acorn",children:"inverse_right(a: G) {\n    a * a.inverse = G.1\n}\n"})}),"\n",(0,t.jsx)(r.p,{children:"We only need right-inverse; we can prove left-inverse from it."}),"\n",(0,t.jsx)(r.h2,{id:"mul",children:"mul"}),"\n",(0,t.jsxs)(r.p,{children:["Inherited from ",(0,t.jsx)(r.a,{href:"../Semigroup/#mul",children:"Semigroup"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"mul_associative",children:"mul_associative"}),"\n",(0,t.jsxs)(r.p,{children:["Inherited from ",(0,t.jsx)(r.a,{href:"../Semigroup/#mul_associative",children:"Semigroup"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"mul_identity_left",children:"mul_identity_left"}),"\n",(0,t.jsxs)(r.p,{children:["Inherited from ",(0,t.jsx)(r.a,{href:"../Monoid/#mul_identity_left",children:"Monoid"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"mul_identity_right",children:"mul_identity_right"}),"\n",(0,t.jsxs)(r.p,{children:["Inherited from ",(0,t.jsx)(r.a,{href:"../Monoid/#mul_identity_right",children:"Monoid"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>l});var i=n(6540);const t={},s=i.createContext(t);function o(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);