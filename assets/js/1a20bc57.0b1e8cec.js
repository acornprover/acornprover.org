"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[9114],{6768:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"cli","title":"Command-Line Interface","description":"The Acorn CLI provides a command-line interface for verifying proofs, running a language server, and generating documentation.","source":"@site/docs/cli.md","sourceDirName":".","slug":"/cli","permalink":"/docs/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/cli.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"sidebar","previous":{"title":"TwoType","permalink":"/docs/library/TwoType"}}');var s=r(4848),o=r(8453);const a={sidebar_position:5},l="Command-Line Interface",c={},d=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Global Options",id:"global-options",level:2},{value:"<code>--lib &lt;DIR&gt;</code>",id:"--lib-dir",level:3},{value:"Commands",id:"commands",level:2},{value:"<code>verify</code> (default)",id:"verify-default",level:3},{value:"<code>reverify</code>",id:"reverify",level:3},{value:"<code>training</code>",id:"training",level:3},{value:"<code>serve</code>",id:"serve",level:3},{value:"<code>docs</code>",id:"docs",level:3},{value:"Version Information",id:"version-information",level:2},{value:"Updating",id:"updating",level:2},{value:"Getting Help",id:"getting-help",level:2}];function t(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"command-line-interface",children:"Command-Line Interface"})}),"\n",(0,s.jsx)(n.p,{children:"The Acorn CLI provides a command-line interface for verifying proofs, running a language server, and generating documentation."}),"\n",(0,s.jsx)(n.p,{children:"For humans, we recommend using the VS Code extension. But for LLM agents, like Claude Code or OpenAI's Codex, it's very helpful to have a CLI interface."}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"You can install the Acorn CLI globally using npm:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm i -g @acornprover/cli\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After installation, you can run the ",(0,s.jsx)(n.code,{children:"acorn"})," command from anywhere on your system."]}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsxs)(n.p,{children:["The most basic usage is to fork the ",(0,s.jsx)(n.a,{href:"https://github.com/acornprover/acornlib",children:"acornlib"})," library, make changes,\nand run ",(0,s.jsx)(n.code,{children:"acorn"})," from the root of the library to see if those changes can be verified."]}),"\n",(0,s.jsx)(n.p,{children:"Usually this is all you need! But the CLI also provides several options and subcommands."}),"\n",(0,s.jsx)(n.h2,{id:"global-options",children:"Global Options"}),"\n",(0,s.jsx)(n.h3,{id:"--lib-dir",children:(0,s.jsx)(n.code,{children:"--lib <DIR>"})}),"\n",(0,s.jsx)(n.p,{children:"Set the directory to look for acornlib. By default, Acorn uses the current directory."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn --lib /path/to/acornlib verify\n"})}),"\n",(0,s.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,s.jsxs)(n.h3,{id:"verify-default",children:[(0,s.jsx)(n.code,{children:"verify"})," (default)"]}),"\n",(0,s.jsx)(n.p,{children:"Verify theorems and proofs in your Acorn project."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn verify [TARGET] [OPTIONS]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TARGET"})," - (Optional) Module or filename to verify. If not provided, verifies all files in the library. If ",(0,s.jsx)(n.code,{children:"-"})," is provided, it reads from stdin."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Options:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--nohash"})," - Don't skip goals based on hash checks. This forces re-verification even if the code hasn't changed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--line <LINE>"})," - Search for a proof at a specific line number. Requires a target file to be specified."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Verify all files in the project\nacorn verify\n\n# Verify a specific file\nacorn verify myfile.ac\n\n# Verify a specific module\nacorn verify mymodule\n\n# Verify without using hash checks\nacorn verify --nohash\n\n# Search for a proof at a specific line\nacorn verify myfile.ac --line 42\n"})}),"\n",(0,s.jsx)(n.h3,{id:"reverify",children:(0,s.jsx)(n.code,{children:"reverify"})}),"\n",(0,s.jsx)(n.p,{children:"Reverify all goals in the project, erroring if any goal requires a search. This is useful for ensuring that all proofs are cached and don't require expensive AI searches."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn reverify\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Re-verifies all goals regardless of hash checks"}),"\n",(0,s.jsx)(n.li,{children:"Fails if any goal requires an AI search (i.e., it's not already proven)"}),"\n",(0,s.jsx)(n.li,{children:"Is useful for CI/CD pipelines to ensure all proofs are complete"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"training",children:(0,s.jsx)(n.code,{children:"training"})}),"\n",(0,s.jsx)(n.p,{children:"Generate training data from your Acorn project. This is used for developing and improving the Acorn AI model."}),"\n",(0,s.jsx)(n.p,{children:"If you're interested in developing AI for Acorn, this could be an interesting place to start! The output data is just a bunch\nof text files, each with one problem-proof pair from acornlib."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn training DIR\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DIR"})," - Directory to generate training data in"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Generate training data in the ./training_data directory\nacorn training ./training_data\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatically enables reverify mode"}),"\n",(0,s.jsx)(n.li,{children:"Disables hash checking"}),"\n",(0,s.jsx)(n.li,{children:"Generates training data that can be used to improve the AI model"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"serve",children:(0,s.jsx)(n.code,{children:"serve"})}),"\n",(0,s.jsx)(n.p,{children:"Run the language server for IDE integration. This command is used by the VS Code extension and not called directly by users."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn serve --extension-root PATH --workspace-root PATH\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Options:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--extension-root <PATH>"})," - (Required) The root folder of the extension"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--workspace-root <PATH>"})," - (Required) The root folder the user has open"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"docs",children:(0,s.jsx)(n.code,{children:"docs"})}),"\n",(0,s.jsx)(n.p,{children:'Generate the "Library Reference" for this website.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn docs DIR\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DIR"})," - Directory to generate documentation in"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Generate documentation in the ./docs directory\nacorn docs ./docs/library\n"})}),"\n",(0,s.jsx)(n.p,{children:"You probably won't want to do this yourself."}),"\n",(0,s.jsx)(n.h2,{id:"version-information",children:"Version Information"}),"\n",(0,s.jsx)(n.p,{children:"To check the version of the Acorn CLI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn --version\n"})}),"\n",(0,s.jsx)(n.h2,{id:"updating",children:"Updating"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"npm"})," installs a small JavaScript wrapper that auto-updates the underlying acorn binary. To force an update check:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn --update\n"})}),"\n",(0,s.jsx)(n.p,{children:"To remove the underlying binary, which will force a re-download:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn --clean\n"})}),"\n",(0,s.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,s.jsx)(n.p,{children:"For help with any command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"acorn --help\nacorn command --help\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var i=r(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);