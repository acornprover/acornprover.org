"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[1420],{626:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"library/FiniteGroup","title":"FiniteGroup","description":"A group is finite if its elements can be placed in a (finite) list","source":"@site/docs/library/FiniteGroup.md","sourceDirName":"library","slug":"/library/FiniteGroup","permalink":"/docs/library/FiniteGroup","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/library/FiniteGroup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Field","permalink":"/docs/library/Field"},"next":{"title":"FiniteSet","permalink":"/docs/library/FiniteSet"}}');var l=i(4848),t=i(8453);const s={},o="FiniteGroup",d={},c=[{value:"all_group_elements_in_elements",id:"all_group_elements_in_elements",level:2},{value:"cyclic_subgroup",id:"cyclic_subgroup",level:2},{value:"elements",id:"elements",level:2},{value:"identity_subgroup",id:"identity_subgroup",level:2},{value:"inverse",id:"inverse",level:2},{value:"inverse_right",id:"inverse_right",level:2},{value:"mul",id:"mul",level:2},{value:"mul_associative",id:"mul_associative",level:2},{value:"mul_identity_left",id:"mul_identity_left",level:2},{value:"mul_identity_right",id:"mul_identity_right",level:2},{value:"order",id:"order",level:2},{value:"pow",id:"pow",level:2},{value:"unique_elements_list",id:"unique_elements_list",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"finitegroup",children:"FiniteGroup"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-acorn",children:"typeclass G: FiniteGroup extends Group {\n    elements: List[G]\n    all_group_elements_in_elements(g: G) {\n        G.elements.contains_every\n    }\n    unique_elements_list {\n        G.elements.is_unique\n    }\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"A group is finite if its elements can be placed in a (finite) list"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/acornprover/acornlib/blob/master/src/finite_group.ac",children:"GitHub"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"all_group_elements_in_elements",children:"all_group_elements_in_elements"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-acorn",children:"all_group_elements_in_elements(g: G) {\n    G.elements.contains_every\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"Every group element appears in the elements list."}),"\n",(0,l.jsx)(n.h2,{id:"cyclic_subgroup",children:"cyclic_subgroup"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-acorn",children:"define cyclic_subgroup(self) -> FiniteSubgroup[G] {\n    FiniteSubgroup.new(map(G.order.range, self.pow).unique)\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"The cyclic subgroup generated by this element."}),"\n",(0,l.jsx)(n.h2,{id:"elements",children:"elements"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-acorn",children:"elements: List[G]\n"})}),"\n",(0,l.jsx)(n.p,{children:"A list containing all elements of the group."}),"\n",(0,l.jsx)(n.h2,{id:"identity_subgroup",children:"identity_subgroup"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-acorn",children:"let identity_subgroup: FiniteSubgroup[G] = FiniteSubgroup.new(List.singleton[G](G.1))\n"})}),"\n",(0,l.jsx)(n.p,{children:"The trivial subgroup containing only the identity element."}),"\n",(0,l.jsx)(n.h2,{id:"inverse",children:"inverse"}),"\n",(0,l.jsxs)(n.p,{children:["Inherited from ",(0,l.jsx)(n.a,{href:"../Group/#inverse",children:"Group"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"inverse_right",children:"inverse_right"}),"\n",(0,l.jsxs)(n.p,{children:["Inherited from ",(0,l.jsx)(n.a,{href:"../Group/#inverse_right",children:"Group"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"mul",children:"mul"}),"\n",(0,l.jsxs)(n.p,{children:["Inherited from ",(0,l.jsx)(n.a,{href:"../Semigroup/#mul",children:"Semigroup"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"mul_associative",children:"mul_associative"}),"\n",(0,l.jsxs)(n.p,{children:["Inherited from ",(0,l.jsx)(n.a,{href:"../Semigroup/#mul_associative",children:"Semigroup"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"mul_identity_left",children:"mul_identity_left"}),"\n",(0,l.jsxs)(n.p,{children:["Inherited from ",(0,l.jsx)(n.a,{href:"../Monoid/#mul_identity_left",children:"Monoid"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"mul_identity_right",children:"mul_identity_right"}),"\n",(0,l.jsxs)(n.p,{children:["Inherited from ",(0,l.jsx)(n.a,{href:"../Monoid/#mul_identity_right",children:"Monoid"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"order",children:"order"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-acorn",children:"let order: Nat = G.elements.length\n"})}),"\n",(0,l.jsx)(n.p,{children:"The number of elements in the group."}),"\n",(0,l.jsx)(n.h2,{id:"pow",children:"pow"}),"\n",(0,l.jsxs)(n.p,{children:["Inherited from ",(0,l.jsx)(n.a,{href:"../Monoid/#pow",children:"Monoid"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"unique_elements_list",children:"unique_elements_list"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-acorn",children:"unique_elements_list {\n    G.elements.is_unique\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"The elements list contains no duplicates."})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(6540);const l={},t=r.createContext(l);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);