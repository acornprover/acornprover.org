"use strict";(self.webpackChunkacornprover_org=self.webpackChunkacornprover_org||[]).push([[1028],{8510:(e,d,r)=>{r.r(d),r.d(d,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"library/AddCommGroup","title":"AddCommGroup","description":"AddCommGroup represents an Abelian group. It\'s a commutative, additive group.","source":"@site/docs/library/AddCommGroup.md","sourceDirName":"library","slug":"/library/AddCommGroup","permalink":"/docs/library/AddCommGroup","draft":false,"unlisted":false,"editUrl":"https://github.com/acornprover/acornprover.org/edit/master/docs/library/AddCommGroup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Library Reference","permalink":"/docs/category/library-reference"},"next":{"title":"AddCommMonoid","permalink":"/docs/library/AddCommMonoid"}}');var n=r(4848),o=r(8453);const t={},a="AddCommGroup",s={},c=[{value:"add",id:"add",level:2},{value:"add_associative",id:"add_associative",level:2},{value:"add_identity_left",id:"add_identity_left",level:2},{value:"add_identity_right",id:"add_identity_right",level:2},{value:"commutative",id:"commutative",level:2},{value:"inverse_right",id:"inverse_right",level:2},{value:"neg",id:"neg",level:2},{value:"sub",id:"sub",level:2}];function l(e){const d={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(d.header,{children:(0,n.jsx)(d.h1,{id:"addcommgroup",children:"AddCommGroup"})}),"\n",(0,n.jsx)(d.pre,{children:(0,n.jsx)(d.code,{className:"language-acorn",children:"typeclass M: AddCommGroup extends AddCommMonoid, AddGroup\n"})}),"\n",(0,n.jsx)(d.p,{children:"AddCommGroup represents an Abelian group. It's a commutative, additive group."}),"\n",(0,n.jsx)(d.p,{children:(0,n.jsx)(d.a,{href:"https://github.com/acornprover/acornlib/blob/master/src/add_comm_group.ac",children:"GitHub"})}),"\n",(0,n.jsx)(d.hr,{}),"\n",(0,n.jsx)(d.h2,{id:"add",children:"add"}),"\n",(0,n.jsxs)(d.p,{children:["Inherited from ",(0,n.jsx)(d.a,{href:"../AddSemigroup/#add",children:"AddSemigroup"}),"."]}),"\n",(0,n.jsx)(d.h2,{id:"add_associative",children:"add_associative"}),"\n",(0,n.jsxs)(d.p,{children:["Inherited from ",(0,n.jsx)(d.a,{href:"../AddSemigroup/#add_associative",children:"AddSemigroup"}),"."]}),"\n",(0,n.jsx)(d.h2,{id:"add_identity_left",children:"add_identity_left"}),"\n",(0,n.jsxs)(d.p,{children:["Inherited from ",(0,n.jsx)(d.a,{href:"../AddMonoid/#add_identity_left",children:"AddMonoid"}),"."]}),"\n",(0,n.jsx)(d.h2,{id:"add_identity_right",children:"add_identity_right"}),"\n",(0,n.jsxs)(d.p,{children:["Inherited from ",(0,n.jsx)(d.a,{href:"../AddMonoid/#add_identity_right",children:"AddMonoid"}),"."]}),"\n",(0,n.jsx)(d.h2,{id:"commutative",children:"commutative"}),"\n",(0,n.jsxs)(d.p,{children:["Inherited from ",(0,n.jsx)(d.a,{href:"../AddCommSemigroup/#commutative",children:"AddCommSemigroup"}),"."]}),"\n",(0,n.jsx)(d.h2,{id:"inverse_right",children:"inverse_right"}),"\n",(0,n.jsxs)(d.p,{children:["Inherited from ",(0,n.jsx)(d.a,{href:"../AddGroup/#inverse_right",children:"AddGroup"}),"."]}),"\n",(0,n.jsx)(d.h2,{id:"neg",children:"neg"}),"\n",(0,n.jsxs)(d.p,{children:["Inherited from ",(0,n.jsx)(d.a,{href:"../AddGroup/#neg",children:"AddGroup"}),"."]}),"\n",(0,n.jsx)(d.h2,{id:"sub",children:"sub"}),"\n",(0,n.jsxs)(d.p,{children:["Inherited from ",(0,n.jsx)(d.a,{href:"../AddGroup/#sub",children:"AddGroup"}),"."]})]})}function h(e={}){const{wrapper:d}={...(0,o.R)(),...e.components};return d?(0,n.jsx)(d,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,d,r)=>{r.d(d,{R:()=>t,x:()=>a});var i=r(6540);const n={},o=i.createContext(n);function t(e){const d=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function a(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),i.createElement(o.Provider,{value:d},e.children)}}}]);